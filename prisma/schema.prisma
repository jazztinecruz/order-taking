// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id          String    @id @default(cuid())
  firstName   String
  lastName    String
  phoneNumber String    @unique
  city        String
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  isActive    Boolean?  @default(true)
  createdAt   DateTime? @default(now())
  createdBy   String?   @default("system")
  timestamp   DateTime? @updatedAt
  orders      Order[]
}

model User {
  id         String      @id @default(cuid())
  email      String      @unique
  customers  Customer[]
  products   Product[]
  orders     Order[]
  orderItems OrderItem[]
}

model Product {
  id         String      @id @default(cuid())
  name       String      @unique
  code       String      @unique
  unitPrice  String
  userId     String?
  isActive   Boolean?    @default(true)
  createdAt  DateTime?   @default(now())
  createdBy  String?     @default("system")
  timestamp  DateTime?   @updatedAt
  User       User?       @relation(fields: [userId], references: [id])
  orderItems OrderItem[]
}

model Order {
  id             String       @id @default(cuid())
  customerId     String?
  customer       Customer?    @relation(fields: [customerId], references: [id])
  dateOfDelivery DateTime?
  status         OrderStatus? @default(NEW)
  totalAmount    String?
  createdAt      DateTime?    @default(now())
  createdBy      String?      @default("system")
  timestamp      DateTime?    @updatedAt
  userId         String?
  User           User?        @relation(fields: [userId], references: [id])
  isActive       Boolean?     @default(false)
  OrderItems     OrderItem[]
}

model OrderItem {
  id         String    @id @default(cuid())
  orderId    String
  order      Order     @relation(fields: [orderId], references: [id])
  skuid      String
  sku        Product   @relation(fields: [skuid], references: [id])
  quantity   Int
  totalPrice String
  timestamp  DateTime? @updatedAt
  userId     String
  User       User      @relation(fields: [userId], references: [id])
}

enum OrderStatus {
  NEW
  COMPLETED
  CANCELLED
}
